#!/bin/bash 

OCIVERSION=${OCIVERSION:-v6}
OCINAME=${OCINAME:-oci-ansible}
VAULT=${VAULT:-.vault.txt}

make_defaults() {
cat <<_DEFAULT_CFG_>ansible/ansible.cfg
[defaults]
ansible_managed = Настроено Ansible
inventory = inventories/project/hosts
collections_path = ./collections
vault_password_file = /.vault.txt
gathering = smart
host_key_checking = False
deprecation_warnings = False
command_warnings = False
module_name = shell
remote_user = debian
nocows = 1
callback_whitelist = profile_tasks
stdout_callback = yaml
retry_files_enabled = False

[privilege_escalation]
become = True

[ssh_connection]
pipelining = True

[galaxy]
server_list =  galaxy, old_galaxy

[galaxy_server.galaxy]
url=https://galaxy.ansible.com/

[galaxy_server.old_galaxy]
url = https://old-galaxy.ansible.com/
_DEFAULT_CFG_

cat <<_DEFAULT_ENV_>ansible/.env
export EDITOR=vi
export TERM=xterm
export LANG=ru_RU.UTF-8
export debian_chroot=ANSIBLE
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'

export ANSIBLE_HOME=/ansible/.ansible
export ANSIBLE_CONFIG=/ansible/ansible.cfg
_DEFAULT_ENV_

}


for i in . .. $HOME; do
	[ -f $i/$OCINAME-$OCIVERSION.tgz ] && IMGFILE=$(realpath $i/$OCINAME-$OCIVERSION.tgz)
	[ -f $i/$VAULT ] && VAULTFILE=$(realpath $i/$VAULT)

	[ -d $i/ansible ] && ANSIBLEDIR=$(realpath $i/ansible)
	[ -d $i/scripts ] && SCRIPTSDIR=$(realpath $i/scripts)
	[ -f $i/ansible/.env ] && DOTENV=$(realpath $i/ansible/.env)
done

if [ -n $IMGFILE ]; then
	docker images $OCINAME | grep "$OCIVERSION" >/dev/null || gzip -c -d $IMGFILE | docker load
else
	echo "can't find $OCINAME.tar for loading"
	exit 1
fi

if [ -z $ANSIBLEDIR ]; then
	# the first start create ansible directory tree
	mkdir -p ansible/.ansible
	mkdir -p ansible/inventories/project
	mkdir -p ansible/collections
	mkdir -p ansible/roles
	mkdir -p ansible/files
	touch ansible/.env
	make_defaults
fi

#sed -i '/DISPLAY/d' $DOTENV 
#[ -n $DISPLAY ] && echo "export DISPLAY=$DISPLAY" >> $DOTENV
[ -z $VAULTFILE ] && echo "no $VAULT" && exit 1


if [ -n $VAULTFILE ]; then
	ANSIBLEDIR=$(pwd)
	[ -d $ANSIBLEDIR/ansible ] && ANSIBLEDIR=$ANSIBLEDIR/ansible
	# use default vault name in container
	docker run --rm -it --net=host \
		-v $VAULTFILE:/.vault.txt:ro \
		-v $HOME/.ssh:/root/.ssh \
		-v $ANSIBLEDIR:/ansible \
		-v $SCRIPTSDIR:/root/scripts \
		-v /etc/timezone:/etc/timezone:ro \
		$OCINAME:$OCIVERSION $@
else
	echo "can't find $VAULT for maping into container"
	exit 1
fi
